glob -- パターンにマッチするパス名を探す

  array glob(string pattern [, int flags])~

|glob| 関数は libc の glob() 関数で使われるルールに基づいて
{pattern} にマッチする全てのパス名を検索します。
ルールは、一般のシェルで使われるルールと似ています。

{pattern}
パターン。チルダの展開やパラメータ置換は行いません。

{flags} 有効なフラグは次のとおりです。 GLOB_MARK -
各戻り値にスラッシュを追加します

GLOB_NOSORT - ディレクトリに存在するファイルを返します
(ソートはされません)

GLOB_NOCHECK -
検索パターンにマッチするファイルが見つからない場合に、
検索パターン自身を返します

GLOB_NOESCAPE -
バックスラッシュによるメタ文字のクォートを行いません

GLOB_BRACE - {a,b,c}
を展開し「a」、「b」あるいは「c」のいずれかにマッチさせます

GLOB_ONLYDIR -
パターンにマッチするディレクトリのみを返します

GLOB_ERR - (ディレクトリが読めないなどの)
読み込みエラー時に停止します。デフォルトではエラーは無視されます。

マッチするファイル／ディレクトリを含む配列を返します。
マッチするファイルがなかった場合には空の配列、
そして失敗した場合には FALSE を返します。

バージョン 説明 5.1.0 GLOB_ERR が追加されました。 4.3.3 PHP
4.3.3 以前では、GLOB_ONLYDIR が、 Windows やその他の GNU C
ライブラリを使用しないシステムでも利用できるようになりました。

|glob| が |opendir|
と関連する関数群の代替策になるかを示す簡便な方法

<?php >
  foreach (glob("*.txt") as $filename) {
      echo "$filename size " . filesize($filename) . "\n";
  }
?>

上の例の出力は、たとえば 以下のようになります。

  funclist.txt size 44686
  funcsummary.txt size 267625
  quickref.txt size 137820



この関数では、 リモートファイル を
使用することはできません。これは、処理されるファイルがサーバの
ファイルシステムによりアクセスできる必要があるためです。

この関数が使用できないシステムも存在します (例: 昔の
Sun OS など)。

GLOB_BRACE フラグは、Solaris などの非 GNU
システムでは動作しないことがあります。

|opendir| |readdir| |closedir| |fnmatch|

vim:ft=help:
