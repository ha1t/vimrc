array_diff_key -- キーを基準にして配列の差を計算する

  array array_diff_key(array array1, array array2 [, array ...])~

{array1} のキーを {array2}
のキーと比較し、その差を返します。 この関数は
|array_diff| に似ていますが、
値ではなくキーを用いて比較するという点が異なります。

{array1} 比較元の配列。

{array2} 比較する対象となる配列。

{...} さらに比較する対象となる配列。

{array1} の要素のうち、
その他の配列のいずれにも含まれないものだけを残した配列を返します。

|array_diff_key| の例 ふたつの key => value
のペアが等しいとみなされるのは、 (string) $key1 === (string)
$key2
である場合のみです。つまり、厳密な型チェックを行うということです。
文字列表現が一致しなければなりません。

<?php >
  $array1 = array('blue'  => 1, 'red'  => 2, 'green'  => 3, 'purple' => 4);
  $array2 = array('green' => 5, 'blue' => 6, 'yellow' => 7, 'cyan'   => 8);
  
  var_dump(array_diff_key($array1, $array2));
?>

上の例の出力は以下となります。

  array(2) {
    ["red"]=>
    int(2)
    ["purple"]=>
    int(4)
  }



この関数は n
次元配列の一つの次元しかチェックしません。
もちろん、array_diff_key($array1[0], $array2[0]);
のようにすることでより深い次元でのチェックもできます。

|array_diff| |array_udiff| |array_diff_assoc| |array_diff_uassoc|
|array_udiff_assoc| |array_udiff_uassoc| |array_diff_ukey| |array_intersect|
|array_intersect_assoc| |array_intersect_uassoc| |array_intersect_key|
|array_intersect_ukey|

vim:ft=help:
