ifx_prepare -- SQL 文を実行用に準備する

  resource ifx_prepare(string query, resource link_identifier [, int cursor_def, mixed blobidarray])~

あとで |ifx_do| で使用するための {query} を準備します。

"select 型"
のクエリの場合はカーソルを宣言してオープンします。
select 以外のクエリは、直接実行されます。

どちらのタイプのクエリにおいても、(予測または実際の数として)
作用された行の数は |ifx_affected_rows| により
取得可能です。

TEXT (または BYTE) カラムの内容が許すならば、
"ifx_textasvarchar(1)" または "ifx_byteasvarchar(1)" を使用する
ことも可能です。 これにより、TEXT (または BYTE)
カラムは、select クエリの 通常の (しかし長い) VARCHAR
カラムと同様に処理され、 BLOB ID
で悩むこともなくなります。

ifx_textasvarchar(0) または ifx_byteasvarchar(0) (デフォルト値)
の場合、select クエリは、BLOB ID (整数値)
に属するものとして BLOB カラムを返します。 BLOB
関数により文字列またはファイルとして BLOB
の値を得ることが 可能です (下記を参照ください)。

{query} クエリ文字列。

{link_identifier} リンク ID。

{cursor_def} オプションのパラメータで、そのカーソルを
"スクロール" または "ホールド"
カーソルとすることができます。
このオプションはビットマスクであり、 IFX_SCROLL、 IFX_HOLD
あるいは 両方とも指定することができます。

{blobidarray} もし、クエリにおいて BLOB (BYTE または TEXT)
カラムがある場合、 対応する "BLOB ID" を有する {blobidarray}
パラメータを追加することが可能です。この場合、クエリテキストの
これらのカラムを "?" で置換することが必要です。

後で |ifx_do| で使用するための結果 ID、
あるいはエラー時に FALSE を返します。

|ifx_do|

vim:ft=help:
