system -- 外部プログラムを実行し、出力を表示する

  string system(string command [, int return_var])~

|system| は、指定した {command} を実行し、結果を出力する C
言語の system 関数に似ています。

PHP をサーバモジュールとして実行している場合、 |system|
のコールにより、各行を出力した後、 Web
サーバの出力バッファが自動的にクリアされます。

コマンドを実行し、何の加工もせずに全てのデータをコマンドから直接
返す必要がある場合、|passthru| 関数を使用してください。

{command} 実行するコマンド。

{return_var} 引数 {return_var} が存在する場合、
実行したコマンドの返すステータスがこの変数に書かれます。

成功時はコマンド出力の最後の行を返し、失敗時は FALSE
を返します。

|system| の例

<?php >
  echo '<pre>';
  
  // シェルコマンド "ls" の全ての結果を出力し、出力の最後の
  // 行を $last_line に格納します。シェルコマンドの戻り値は
  // $retval に格納されます。
  $last_line = system('ls', $retval);
  
  // 追加情報を表示します。
  echo '
  </pre>
  <hr />Last line of the output: ' . $last_line . '
  <hr />Return value: ' . $retval;
?>





ユーザが入力したデータをこの関数に
渡すことを許可する場合、ユーザが任意のコマンドを実行できるようシステムを欺くことが
できないように |escapeshellarg| または |escapeshellcmd|
を適用する必要があります。

プログラムがこの関数で始まる場合、
バックグラウンドで処理を続けさせるには、
プログラムの出力をファイルや別の出力ストリームにリダイレクトする必要があります。
そうしないと、プログラムが実行を終えるまで PHP
はハングしてしまいます。

セーフモード が有効な場合、
safe_mode_exec_dirの中にある実行プログラムのみ実行可能です。
実際的な理由により、現在、実行プログラムへのパスに
..を 含めることはできません。

セーフモードが有効な場合、コマンド文字列は
|escapeshellcmd| でエスケープされます。 つまり、echo y | echo x
は、echo y \| echo x となります。

|exec| |passthru| |popen| |escapeshellcmd| |pcntl_exec|
バックティック演算子

vim:ft=help:
