ip2long -- (IPv4)
インターネットプロトコルドット表記のアドレスを、適当なアドレスを有する文字列に変換する

  int ip2long(string ip_address)~

関数 |ip2long| は、インターネット標準形式
(ドット表記の文字列) 表現から IPv4
インターネットネットアドレスを生成します。

|ip2long| は不完全な形式の IP
アドレスに対しても動作します。詳しい情報は
http://publibn.boulder.ibm.com/doc_link/en_US/a_doc_lib/libs/commtrf2/inet_addr.htm
を参照ください。

{ip_address} 標準形式のアドレス。

IPv4 アドレス、あるいは {ip_address} が不正な形式の場合に
FALSE を返します。

バージョン 説明 5.0.0 このバージョンより前は、|ip2long|
が失敗したときの返り値は -1 でした。

|ip2long| の例

<?php >
  $ip = gethostbyname('www.example.com');
  $out = "以下の URL は同じ意味です:<br />\n";
  $out .= 'http://www.example.com/, http://' . $ip . '/, そして http://' . sprintf("%u", ip2long($ip)) . "/<br />\n";
  echo $out;
?>





IP アドレスの表示 2 番目の例は、|printf|
関数で変換されたアドレスを出力する方法を示すものです。
PHP 4 と PHP 5 のどちらでも使えます。

<?php >
  $ip   = gethostbyname('www.example.com');
  $long = ip2long($ip);
  
  if ($long == -1 || $long === FALSE) {
      echo '無効な IP です。もういちど確認してください。';
  } else {
      echo $ip   . "\n";           // 192.0.34.166
      echo $long . "\n";           // -1073732954
      printf("%u\n", ip2long($ip)); // 3221234342
  }
?>



IP の検証 |ip2long| を、それ単体で IP
の検証に利用するべきではありません。|long2ip|
と組み合わせて利用します。

<?php >
  // IP が有効であることを確認します。また、不完全な形式の IP を
  // 以下で示すような正しい形式（ドットで 4 つに区切られている）に変換します。
  $ip = long2ip(ip2long("127.0.0.1")); // "127.0.0.1"
  $ip = long2ip(ip2long("10.0.0")); // "10.0.0.0"
  $ip = long2ip(ip2long("10.0.256")); // "10.0.1.0"
?>



PHP の整数型は符号付き形式であり、多くの IP
アドレスは負の整数値になります。 そのため、符号なし
IP アドレスを文字列形式で取得するには |sprintf| や |printf|
で "%u" を使用する必要があります。

vim:ft=help:
