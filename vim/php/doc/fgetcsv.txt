fgetcsv --
ファイルポインタから行を取得し、CSVフィールドを処理する

  array fgetcsv(resource handle [, int length [, string delimiter [, string enclosure [, string escape]]]])~

|fgets| に動作は似ていますが、 |fgetcsv| は行を CSV
フォーマットのフィールドとして読込み処理を行い、
読み込んだフィールドを含む配列を返すという違いがあります。

{handle}
ファイルポインタは有効なものでなければならず、また
|fopen|, |popen|, もしくは |fsockopen|
で正常にオープンされたファイルを指している必要があります。

{length} (行末文字を考慮して) CSV
ファイルにある最も長い行よりも大きい必要があります。
PHP 5 でオプションになりました。このパラメータを省略
(もしくは PHP 5.0.4 かそれ以降で 0 を設定) すると、
最大行長は制限されません。この場合、若干動作が遅くなります。

{delimiter} フィールドのデリミタ (1 文字のみ)
を設定します。 デフォルトはカンマです。

{enclosure} フィールド囲いこみ文字 (1 文字のみ)
を設定します。
デフォルトはダブルクォーテーションマークです。

{escape} エスケープ文字 (1 文字のみ) を設定します。
デフォルトはバックスラッシュ (\) です。

読み込んだフィールドの内容を含む数値添字配列を返します。

CSV ファイルの空行は null
フィールドを一つだけ含む配列として返され、
エラーにはなりません。

マッキントッシュコンピュータ上で作成されたファイルを読み込む際に、
PHP が行末を認識できないという問題が発生した場合、
実行時の設定オプションauto_detect_line_endings
を有効にする必要が生じるかもしれません。

|fgetcsv|
は、ファイルの終端に達した場合を含めてエラー時に FALSE
を返します。

バージョン 説明 5.3.0 {escape}
パラメータが追加されました。 4.3.5 |fgetcsv|
はバイナリセーフとなりました。 4.3.0 {enclosure}
パラメータが追加されました。

CSV ファイルの全てのコンテンツを読み込み、表示する

<?php >
  $row = 1;
  $handle = fopen("test.csv", "r");
  while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
      $num = count($data);
      echo "<p> $num fields in line $row: <br /></p>\n";
      $row++;
      for ($c=0; $c < $num; $c++) {
          echo $data[$c] . "<br />\n";
      }
  }
  fclose($handle);
?>





この関数はロケール設定を考慮します。もし LANG が例えば
en_US.UTF-8 の場合、 ファイル中の 1
バイトエンコーディングは間違って読み込まれます。

|str_getcsv| |explode| |file| |pack| |fputcsv|

vim:ft=help:
