substr -- 文字列の一部分を返す

  string substr(string string, int start [, int length])~

文字列 {string} の、{start} で指定された位置から {length}
バイト分の文字列を返します。

{string} 入力文字列。

{start} {start} が正の場合、返される文字列は、 {string} の 0
から数えて {start}番目から始まる文字列となります。
例えば、文字列'abcdef'において位置
0にある文字は、'a'であり、 位置2には'c'があります。

{start} が負の場合、返される文字列は、
{string}の後ろから数えて
{start}番目から始まる文字列となります。

負の {start} の使用

<?php >
  $rest = substr("abcdef", -1);    // "f" を返す
  $rest = substr("abcdef", -2);    // "ef" を返す
  $rest = substr("abcdef", -3, 1); // "d" を返す
?>





{length} {length} が指定され、かつ正である場合、
返される文字列は {start} ({string} の長さに依存します)
から数えて{length}文字数分となります。 もし {string} が
{start} の文字列長より小さいもしくは等しい場合、FALSE
が返されます。

{length} が指定され、かつ負である場合、 {string}
の終端から多くの文字が省略されます ({start}
が負の場合、 開始位置は文字列の終端を過ぎているので)
。 もし {start} が切り出し位置を超える場合、
空文字が返されます。

負の {length} の使用

<?php >
  $rest = substr("abcdef", 0, -1);  // "abcde" を返す
  $rest = substr("abcdef", 2, -1);  // "cde" を返す
  $rest = substr("abcdef", 4, -4);  // "" を返す
  $rest = substr("abcdef", -3, -1); // "de" を返す
?>



文字列の一部を返します。

基本的な |substr| の使用法

<?php >
  echo substr('abcdef', 1);     // bcdef
  echo substr('abcdef', 1, 3);  // bcd
  echo substr('abcdef', 0, 4);  // abcd
  echo substr('abcdef', 0, 8);  // abcdef
  echo substr('abcdef', -1, 1); // f
  
  // 文字列中の 1 文字にアクセスすることも
  // "中括弧" を使用することで可能
  $string = 'abcdef';
  echo $string{0};                 // a
  echo $string{3};                 // d
  echo $string{strlen($string)-1}; // f
?>





|strrchr| |substr_replace| |preg_match| |trim| |mb_substr| |wordwrap|

vim:ft=help:
