ldap_search -- LDAP ツリーを探索する

  resource ldap_search(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])~

指定したフィルタを使用し、 スコープ LDAP_SCOPE_SUBTREE
でディレクトリを検索します。これは、ディレクトリ全体を検索するのと同じ意味です。

4.0.5
以降、並列検索も可能となっています。並列検索を行うには、単一の
ID を使うのではなく、リンク ID の配列を使用します。
同じベース DN
を使用したくない場合や全ての検索について同じフィルタを
使用したくない場合、ベース DN
の配列またはフィルタの配列を使用する
ことが可能です。これらの配列は、リンク ID
の配列と同じ大きさである
必要があります。これは、その配列の最初が一回の検索で使用され、2
番目の
エントリが他の検索で使用されるといったようになるからです。並列検索を
実行する際、エラーの場合を除き、検索結果 ID
の配列が返されます。
エラーの場合は対応する検索のエントリは FALSE
となります。これは
通常返される値とよく似ていますが、検索が行われた際に結果
ID が常に 返されます。まれに、並列検索は ID
を返すにもかかわらず通常の検索は FALSE
を返すということがあります。

{link_identifier} |ldap_connect| が返す LDAP リンク ID。

{base_dn} ディレクトリのベース DN。

{filter} 検索フィルタは、LDAP
ドキュメントに記述されたフォーマットの論理
演算子を用いて、簡単なものまたは高度なものとすることができます
(フィルタに関する詳細な情報については、 Netscape Directory
SDK を参照ください)。

{attributes} 必要な属性を、 array("mail", "sn", "cn")
のような通常の PHP 文字列配列で保持します。 "dn"
は要求された属性の型によらず常に返されることに注意してください。

このパラメータを使用すると、デフォルトの動作よりもかなり効率的になります
(デフォルトでは、すべての属性とその値を返します)。
したがって、これを使用することを推奨します。

{attrsonly} 属性の型のみを取得したい場合は 1
を設定します。
属性の型および値の両方を取得したい場合は 0
を設定します (これがデフォルトの挙動です)。

{sizelimit} 取得するエントリ数の制限を設定します。 0
は無制限であることを表します。

このパラメータは、サーバ側で事前に設定されている
sizelimit
を上書きすることはできません。それ以下の値を指定することはできます。

ディレクトリサーバのホストによっては、
事前に設定された数以上のエントリを返さないようになっているものもあります。
この場合、サーバでは、それが結果セットのすべてではないことを通知します。
このパラメータでエントリ数を制限した場合にも、同じことが起こります。

{timelimit} 検索に要する最大秒数を設定します。 これを 0
にすると無制限であることを表します。

このパラメータは、サーバ側で事前に設定されている
timelimit
を上書きすることはできません。それ以下の値を指定することはできます。

{deref} 検索時のエイリアスの扱いについて指定します。
以下のいずれかとなります。 LDAP_DEREF_NEVER - (デフォルト)
エイリアスは参照されません。

LDAP_DEREF_SEARCHING -
エイリアスを参照しますが、検索のベースオブジェクト上にいるときは参照しません。

LDAP_DEREF_FINDING -
エイリアスの参照は、ベースオブジェクト上にいて検索中でない場合に行われます。

LDAP_DEREF_ALWAYS - エイリアスを常に参照します。

検索結果 ID を返します。エラーの場合は、FALSE
を返します。

バージョン 説明 4.0.5
並列検索のサポートが追加されました。 4.0.2
{attrsonly}、{sizelimit}、 {timelimit} および {deref}
が追加されました。

以下の例は、"My Company"
の全員について姓または名の一部に文字列 $person
を含む人の組織単位、姓、名、電子メールアドレスを取得します。
この例は、複数の属性に関する情報についてサーバに検索をかける論理
フィルタを使用します。 LDAP 検索

<?php >
  // $ds は、ディレクトリサーバの有効なリンク ID
  
  // $person は、人名またはその一部。例 "Jo"
  
  $dn = "o=My Company, c=US";
  $filter="(|(sn=$person*)(givenname=$person*))";
  $justthese = array("ou", "sn", "givenname", "mail");
  
  $sr=ldap_search($ds, $dn, $filter, $justthese);
  
  $info = ldap_get_entries($ds, $sr);
  
  echo $info["count"]." 個のエントリが返されました\n";
?>





vim:ft=help:
