stream_get_meta_data --
ヘッダーあるいはメタデータをストリームまたはファイルポインタから取得する

  array stream_get_meta_data(resource stream)~

既存の {stream} に関する情報を取得します。 ストリームは
|fopen| か、 |fsockopen| か、|pfsockopen| で
作成されたいずれのものも指定できます。
結果の配列は次のような項目を含みます。

{timed_out} (bool) - 最後に |fread| または |fgets|
でデータを待っている時にタイムアウトした場合 TRUE
を返します。

{blocked} (bool) - ストリームがブロック I/O モードの場合に
TRUE となります。 |stream_set_blocking| を参照ください。

{eof} (bool) - ストリームが EOF に 達した時 TRUE となります。
ストリームがソケットベースの場合、このメンバーは、
たとえ {unread_bytes} が 0 でなくても TRUE
になる場合があることに注意してください。
まだデータがあるかどうかを調べるには、このパラメータではなく、
|feof| を使ってください。

{unread_bytes} (int) - PHP の
内部バッファにあるデータのバイト数。

スクリプト中でこの値を使用すべきではありません。

次の項目は PHP 4.3.0 で追加されました。

{stream_type} (string) -
ストリームの下層にある実装を表すラベル

{wrapper_type} (string) -
ストリームを覆うプロトコルラッパを表すラベル。
ラッパについては を参照ください。

{wrapper_data} (mixed) -
ストリームに付随しているラッパの固有のデータ。
ラッパとその固有の情報については、 を参照ください。

{filters} (array) -
ストリームに付加されているフィルタの名称を格納した配列。
フィルタに関するドキュメントは
利用できるフィルタのリスト にあります。

この関数は PHP 4.3.0 で初めて導入されましたが、
それ以前には ソケットベースのストリーム専用の
|socket_get_status| を使い、 最初に挙げた 4
つの項目に関しては取得できました。

PHP 4.3.0 またはそれ以降では、 |socket_get_status|
はこの関数のエイリアスと なっています。

この関数は ソケット関数
で作られたストリームに対しては機能しません。

次の項目は PHP 5.0.0 で追加されました。

{mode} (string) - このストリームに要求される
アクセスモード（fopen() リファレンスの表 1
を参照ください）。

{seekable} (bool) - 現在のストリーム内で
移動が可能かどうか。

{uri} (string) - このストリームに関連付けられた URI /
ファイル名。

vim:ft=help:
